package com.hsicen.hellocompose.uiimport androidx.annotation.DrawableResimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.material.Iconimport androidx.compose.material.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.res.painterResourceimport androidx.compose.ui.tooling.preview.Previewimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport androidx.lifecycle.viewmodel.compose.viewModelimport com.hsicen.hellocompose.Rimport com.hsicen.hellocompose.WeViewModelimport com.hsicen.hellocompose.ui.theme.WeComposeTheme/** * 作者：hsicen  12/8/21 22:52 * 邮箱：codinghuang@163.com * 作用： * 描述：底部导航栏 */@Composablefun WeBottomBar(select: Int, onSelect: ((Int) -> Unit)? = null) {  Row(Modifier.background(WeComposeTheme.colors.bottomBar)) {    TabItem(selectIcon(0, select), "聊天", selectColor(0 == select),      Modifier        .weight(1f)        .clickable { onSelect?.invoke(0) })    TabItem(selectIcon(1, select), "通讯录", selectColor(1 == select),      Modifier        .weight(1f)        .clickable { onSelect?.invoke(1) })    TabItem(selectIcon(2, select), "发现", selectColor(2 == select),      Modifier        .weight(1f)        .clickable { onSelect?.invoke(2) })    TabItem(selectIcon(3, select), "我", selectColor(3 == select),      Modifier        .weight(1f)        .clickable { onSelect?.invoke(3) })  }}@Composablefun TabItem(@DrawableRes iconId: Int, title: String, tint: Color, modifier: Modifier = Modifier) {  Column(    modifier.padding(vertical = 8.dp),    horizontalAlignment = Alignment.CenterHorizontally  ) {    Icon(painterResource(iconId), title, Modifier.size(24.dp), tint)    Text(text = title, fontSize = 11.sp, color = tint)  }}private fun selectIcon(pos: Int, select: Int): Int {  return when (pos) {    0 -> if (0 == select) R.drawable.ic_chat_filled else R.drawable.ic_chat_outlined    1 -> if (1 == select) R.drawable.ic_contacts_filled else R.drawable.ic_contacts_outlined    2 -> if (2 == select) R.drawable.ic_discovery_filled else R.drawable.ic_discovery_outlined    else -> if (3 == select) R.drawable.ic_me_filled else R.drawable.ic_me_outlined  }}@Composableprivate fun selectColor(select: Boolean) =  if (select) WeComposeTheme.colors.iconCurrent  else WeComposeTheme.colors.icon/*** preview**/@Preview(showBackground = true)@Composablefun PreviewTabItem() {  TabItem(selectIcon(2, 2), "聊天", selectColor(true))}@Preview(showBackground = true)@Composablefun PreviewBottomBar() {  WeComposeTheme(WeComposeTheme.Theme.Dark) {    WeBottomBar(1)  }}