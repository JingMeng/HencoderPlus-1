package com.hsicen.a07_viewimport androidx.activity.ComponentActivityimport androidx.activity.compose.setContentimport androidx.compose.foundation.gestures.detectTransformGesturesimport androidx.compose.foundation.layout.Arrangementimport androidx.compose.foundation.layout.Boximport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.runtime.mutableFloatStateOfimport androidx.compose.runtime.mutableStateOfimport androidx.compose.runtime.rememberimport androidx.compose.runtime.setValueimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.graphicsLayerimport androidx.compose.ui.input.pointer.pointerInputimport androidx.compose.ui.layout.ContentScaleimport androidx.compose.ui.unit.IntOffsetimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.roundimport coil.compose.AsyncImage/******====== 67.自定义触摸：多指手势 ======******//** * detectTransformGestures() * 含义： *  应用角度：图形变换的常用手势监听器； *  技术角度：常用的多指手势的监听器。 * * 参数： *  panZoomLock ：让【旋转】和【移动、放缩】不能同时被识别，防止用户误操作； *  onGesture ：回调函数。它的参数： *      centroid ：多指中心点； *      pan ：多指位移； *      zoom ：多指放缩倍数； *      rotation ：多指旋转角度 */fun ComponentActivity.composeView08() {    setContent {        DetachPointer01()    }}@Composableprivate fun DetachPointer01() {    val maxZoom by remember { mutableFloatStateOf(4f) }    var scale by remember { mutableFloatStateOf(1f) }    var offset by remember { mutableStateOf(IntOffset.Zero) }    Column(        modifier = Modifier.fillMaxSize(),        verticalArrangement = Arrangement.Center,        horizontalAlignment = Alignment.CenterHorizontally    ) {        Box(Modifier            .size(width = 320.dp, height = 200.dp)            .padding(16.dp)            .pointerInput(Unit) {                detectTransformGestures { _, pan, zoom, _ ->                    scale *= zoom                    scale = scale.coerceIn(1f, maxZoom)                    offset += (pan * scale).round()                }            }) {            AsyncImage(                "https://cdn.pixabay.com/photo/2015/05/28/18/50/the-three-gorges-788314__340.jpg",                "Image",                modifier = Modifier                    .graphicsLayer {                        scaleX = scale                        scaleY = scale                        translationX = offset.x.toFloat()                        translationY = offset.y.toFloat()                    }                    .fillMaxSize(),                contentScale = ContentScale.Crop)        }    }}