package com.hsicen.a01_introduceimport androidx.activity.ComponentActivityimport androidx.activity.compose.setContentimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.layout.paddingimport androidx.compose.material.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport com.hsicen.a01_introduce.comm.Contributorimport com.hsicen.a01_introduce.comm.githubServiceimport io.reactivex.rxjava3.disposables.Disposableimport io.reactivex.rxjava3.schedulers.Schedulersimport kotlinx.coroutines.*/******====== 09.结构化并发 ======******//** * GC：Static 活跃的线程 JNI  ==> WeakReference * * 父子协程 * 协程的结构化取消 */fun ComponentActivity.basics09() {  setContent {    ShowContent()  }}private fun coroutineCustomSuspend01() {  CoroutineScope(Dispatchers.Main.immediate).launch {    val contributors = getContributors()    showContribute(contributors)    launch {    }  }}private fun showContribute(contributors: List<Contributor>) {  println("Show:$contributors")}private suspend fun getContributors(): List<Contributor> {  return githubService.contributors("square", "retrofit")    .filter { it.contributions > 10 }}private fun getContributorsRx(): Disposable {  return githubService.contributorsRx("square", "retrofit")    .map { list -> list.filter { it.contributions > 10 } }    .observeOn(Schedulers.io())    .subscribe(::showContribute)}private suspend fun processData() =  withContext(Dispatchers.Default) {    println("@@@basics05 (4) " + Thread.currentThread().name)    delay(500)    "Processed: data"  }@Composableprivate fun ShowContent() {  Text(    text = "Hello Coroutine 09!",    fontSize = 25.sp,    modifier = Modifier      .padding(16.dp)      .background(Color.Yellow)      .padding(16.dp)  )}