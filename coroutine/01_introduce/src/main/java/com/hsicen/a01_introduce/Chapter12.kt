package com.hsicen.a01_introduceimport androidx.activity.ComponentActivityimport androidx.activity.compose.setContentimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.layout.paddingimport androidx.compose.material.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport com.hsicen.a01_introduce.comm.Contributorimport com.hsicen.a01_introduce.comm.githubServiceimport kotlinx.coroutines.runBlocking/******====== 12.回到线程世界：runBlocking() ======******//** * runBlocking： *  1.不需要 CoroutineScope 环境 *  2.会阻塞当前线程，知道代码执行完毕 *  3.把协程封装成阻塞式的代码，让传统 api 调用 *  4.在 main 函数中使用 *  5.测试代码中使用 */fun ComponentActivity.basics12() {  setContent {    ShowContent()    coroutineRunBlocking()  }}private fun coroutineRunBlocking() {  val contributors = coroutineCustomSuspend01()  showContribute(contributors)}private fun coroutineCustomSuspend01() = runBlocking {  githubService.contributors("square", "retrofit")}private fun showContribute(contributors: List<Contributor>) {  println("Show:$contributors")}@Composableprivate fun ShowContent() {  Text(    text = "Hello Coroutine 12!",    fontSize = 25.sp,    modifier = Modifier      .padding(16.dp)      .background(Color.Yellow)      .padding(16.dp)  )}