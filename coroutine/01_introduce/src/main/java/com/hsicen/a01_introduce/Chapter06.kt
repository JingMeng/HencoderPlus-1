package com.hsicen.a01_introduceimport androidx.activity.ComponentActivityimport androidx.activity.compose.setContentimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.paddingimport androidx.compose.material.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport com.hsicen.a01_introduce.comm.Contributorimport com.hsicen.a01_introduce.comm.githubServiceimport kotlinx.coroutines.*/******====== 06.挂起函数的性能优势：从 withContext() 说起 ======******//** * suspend 标记为耗时函数，需要在后台线程中执行 * withContext() 与函数体绑定，保证其内部代码在指定的线程中执行 */fun ComponentActivity.basics06() {  setContent {    ShowContent()    coroutineCustomSuspend01()  }}private fun coroutineCustomSuspend01() {  CoroutineScope(Dispatchers.Main.immediate).launch {    println("@@@basics05 (1) " + Thread.currentThread().name)    val contributors = getContributors()    println("@@@basics05 (3) " + Thread.currentThread().name)    processData()    println("@@@basics05 (5) " + Thread.currentThread().name)  }}private suspend fun getContributors(): List<Contributor> {  println("@@@basics05 (2) " + Thread.currentThread().name)  return githubService.contributors("square", "retrofit")}private suspend fun processData() =  withContext(Dispatchers.Default) {    println("@@@basics05 (4) " + Thread.currentThread().name)    delay(500)    "Processed: data"  }@Composableprivate fun ShowContent() {  Text(    text = "Hello Coroutine 06!",    fontSize = 25.sp,    modifier = Modifier      .padding(16.dp)      .background(Color.Yellow)      .padding(16.dp)      .clickable {        println("@@@ click from mouse.")      }  )}