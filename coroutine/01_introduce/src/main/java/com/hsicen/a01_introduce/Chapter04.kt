package com.hsicen.a01_introduceimport androidx.activity.ComponentActivityimport androidx.activity.compose.setContentimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.paddingimport androidx.compose.material.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport kotlinx.coroutines.*/******====== 04.切线程 WithContext(串行的切线程) ======******//** * */fun ComponentActivity.basics04() {  setContent {    ShowContent()    coroutineWithContext01()  }}private fun coroutineWithContext01() {  CoroutineScope(Dispatchers.Main).launch {    println("@@@basics04(1): ${Thread.currentThread().name}")    launch(Dispatchers.Default) {// 与外层的 launch 为并行关系      delay(300)      println("@@@basics04(2): ${Thread.currentThread().name}")    }    println("@@@basics04(3): ${Thread.currentThread().name}")    withContext(Dispatchers.IO) {// 与外层的 launch 为串行关系      delay(500)      println("@@@basics04(4): ${Thread.currentThread().name}")    }    println("@@@basics04(5): ${Thread.currentThread().name}")  }}@Composableprivate fun ShowContent() {  Text(    text = "Hello Coroutine 04!",    fontSize = 25.sp,    modifier = Modifier      .padding(16.dp)      .background(Color.Yellow)      .padding(16.dp)      .clickable {        println("@@@ click from mouse.")      }  )}