package com.hsicen.a01_introduce.commimport io.reactivex.rxjava3.core.Singleimport retrofit2.Callimport retrofit2.http.GETimport retrofit2.http.Pathimport java.util.concurrent.CompletableFutureconst val GITHUB_BASE_URL = "https://api.github.com/"data class Contributor(  val login: String,  val contributions: String)interface GitHubService {  @GET("repos/{owner}/{repo}/contributors")  fun contributorsCall(    @Path("owner") owner: String,    @Path("repo") repo: String  ): Call<List<Contributor>>  @GET("repos/{owner}/{repo}/contributors")  fun contributorsFuture(    @Path("owner") owner: String,    @Path("repo") repo: String  ): CompletableFuture<List<Contributor>>  @GET("repos/{owner}/{repo}/contributors")  fun contributorsRx(    @Path("owner") owner: String,    @Path("repo") repo: String  ): Single<List<Contributor>>  @GET("repos/{owner}/{repo}/contributors")  suspend fun contributors(    @Path("owner") owner: String,    @Path("repo") repo: String  ): List<Contributor>}