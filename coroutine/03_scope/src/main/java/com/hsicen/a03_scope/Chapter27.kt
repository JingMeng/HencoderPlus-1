package com.hsicen.a03_scopeimport kotlinx.coroutines.*import kotlin.coroutines.ContinuationInterceptorimport kotlin.coroutines.EmptyCoroutineContextimport kotlin.coroutines.coroutineContext/******====== 27.从挂起函数中获里CoroutineContext ======******//** * CoroutineContext： *  1.coroutineContext & currentCoroutineContext() */fun main(): Unit = runBlocking {  test2()  delay(3000)}private suspend fun test1() {  val scope = CoroutineScope(EmptyCoroutineContext)  scope.launch {    delay(500)    println("Dispatcher:${coroutineContext[ContinuationInterceptor]}")  }}private suspend fun test2() {  delay(500)  currentCoroutineContext()  println("Dispatcher:${coroutineContext[ContinuationInterceptor]}")}