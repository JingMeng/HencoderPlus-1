package com.hsicen.a03_scopeimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.Jobimport kotlinx.coroutines.delayimport kotlinx.coroutines.runBlockingimport kotlin.coroutines.AbstractCoroutineContextElementimport kotlin.coroutines.CoroutineContextimport kotlin.coroutines.EmptyCoroutineContext/******====== 32.自定义CoroutineContext ======******//** * CoroutineContext： *  ContinuationInterceptor *  Job *  CoroutineExceptionHandler *  CoroutineName * * AbstractCoroutineContextElement: */fun main(): Unit = runBlocking {    test1()    delay(3000)}private fun test1() {    val scope = CoroutineScope(EmptyCoroutineContext + Job())}class HsicenContext : AbstractCoroutineContextElement(HsicenContext) {    companion object Key : CoroutineContext.Key<HsicenContext>    override fun toString(): String {        return "HsicenContext"    }}