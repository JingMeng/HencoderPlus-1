package com.hsicen.a04_channelflowimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.delayimport kotlinx.coroutines.flow.collectIndexedimport kotlinx.coroutines.flow.flowOfimport kotlinx.coroutines.flow.withIndeximport kotlinx.coroutines.launchimport kotlinx.coroutines.runBlockingimport kotlin.coroutines.EmptyCoroutineContext/******====== 49.Flow 的 withIndex 操作符 ======******/fun main(): Unit = runBlocking {    // Flow        数据流    // SharedFlow  事件订阅(一对多，跨协程)    // StateFlow   状态订阅    test1()    delay(10000)}private fun test1() {    val scope = CoroutineScope(EmptyCoroutineContext)    val flow1 = flowOf(1, 2, 3, 4, 5)    // 给每个元素加上序号    scope.launch {        flow1.withIndex()            .collect { (index, value) ->                println("flow1: ${index}=${value}")            }    }    scope.launch {        flow1.collectIndexed { index, value ->            println("flow2: ${index}=${value}")        }    }}