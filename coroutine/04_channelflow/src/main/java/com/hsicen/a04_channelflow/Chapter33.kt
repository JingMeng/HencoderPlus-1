package com.hsicen.a04_channelflowimport kotlinx.coroutines.channels.Channelimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.flowimport kotlinx.coroutines.flow.takeimport kotlinx.coroutines.runBlockingimport java.math.BigInteger/******====== 33.Channel 和 Flow 简介与对比 ======******//** * Channel：协程之间传递数据的工具 * * Flow：数据流 */fun main(): Unit = runBlocking {    fun fibonacci(): Flow<BigInteger> = flow {        var x = BigInteger.ZERO        var y = BigInteger.ONE        while (true) {            emit(x)            x = y.also { y += x }        }    }    // StateFlow  状态订阅    // ShareFlow  事件订阅    // Flow       数据流    Channel<String> {    }    flow {        emit("1")        emit("2")    }.collect {        println("Receive: $it")    }    fibonacci().take(10).collect {        println("fibonacci take: $it")    }}